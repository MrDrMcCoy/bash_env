#!/usr/bin/env bash

get__ack () {
  echo "Downloading ack..."
  local url=$(curl -sL https://beyondgrep.com/install | awk -F '"' '/curl/{print $2; exit}')
  curl -L# "${url}" -o "$HOME/bin/ack"
  chmod 0755 $HOME/bin/ack
}

get__adb () {
  echo "Downloading Android platform tools"
  case $(uname) in
    *inux) local arch=linux ;;
    *arwin) local arch=darwin ;;
    *) echo "Unknown platform: $(uname)" ; return ;;
  esac
  curl -L# https://dl.google.com/android/repository/platform-tools-latest-${arch}.zip \
    -o /tmp/adb.zip || return
  [ -d $HOME/bin/systrace ] && rm -r $HOME/bin/systrace
  unzip -qujo /tmp/adb.zip "platform-tools/*" -d $HOME/bin
  rm /tmp/adb.zip
}

get__bar () {
  echo "Downloading bar, a pure bash progress bar..."
  curl -L# http://www.theiling.de/downloads/bar-1.4-src.tar.bz2 \
    | tar --no-same-owner --strip-components=1 -xjC "$HOME/bin" bar-1.4/bar
}

get__catimg () {
  echo "Downloading catimg, a terminal image viewer..."
  local url="$(
    curl -sL https://api.github.com/repos/posva/catimg/releases \
      | awk -F \" "/zipball_url/{ print \$4 ; exit }"
    )"
  curl -L# "$url" -o /tmp/catimg.zip || return
  unzip -oj \
    /tmp/catimg.zip \
    *catimg \
    -d "$HOME/bin"
  rm /tmp/catimg.zip
}

get__colorize () {
  echo "Downloading colorize, a Perl script for color-coding piped text..."
  curl -L# -o ${HOME}/bin/colorize \
    https://raw.githubusercontent.com/raszi/colorize/master/colorize || return
  chmod +x ${HOME}/bin/colorize
}

get__conspy () {
  echo "Downloading conspy, see what other users are up to on the console..."
  case "$(uname -sm)" in
    "Linux x86_64")
      local build_dir="/tmp/conspy"
      mkdir -vp "$build_dir"
      curl -L# https://cfhcable.dl.sourceforge.net/project/conspy/conspy-1.14-1/conspy-1.14.tar.gz \
        | tar --no-same-owner --strip-components=1 -xzC "$build_dir"
      cd "$build_dir"
      make || return
      sudo make install
      cd -
      rm -rf "$build_dir" ;;
    *)
      echo "Unsupported platform: $(uname -sm)"
      return ;;
  esac
}

get__dategrep () {
  echo "Downloading dategrep, search within log files by date range..."
  local version=$(
    curl -sL https://github.com/mdom/dategrep/releases/latest \
      | awk -F " " '/\<title\>/{print $2; exit}')
  curl -L# -o "$HOME/bin/dategrep" https://raw.githubusercontent.com/mdom/dategrep/${version}/bin/dategrep
  chmod a+x "$HOME/bin/dategrep"
}

get__distribution () {
  echo "Downloading distribution..."
  curl -L# https://raw.githubusercontent.com/philovivero/distribution/master/distribution.py \
    -o "$HOME/bin/distribution"
  chmod a+x "$HOME/bin/distribution"
}

get__duplicates () {
  echo "Downloading duplicates, a duplicate file finder"
  go get github.com/mathieuancelin/duplicates
  cp $HOME/go/bin/duplicates $HOME/bin/duplicates
}

get__ffmpeg () {
  echo "Downloading ffmpeg"
  case "$(uname -sm)" in
    "Linux x86_64")
      subpath="$(
        curl -sL https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz \
          | tar -tJ | head -n1 )"
      curl -L# https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz \
        | tar --no-same-owner --strip-components=1 -xJC "$HOME/bin/" \
          ${subpath}ffmpeg \
          ${subpath}ffprobe \
    ;;
    "Darwin x86_64")
      for exe in ffmpeg ffprobe ffplay; do
        curl -sSL https://evermeet.cx/ffmpeg/get/${exe} > /tmp/${exe}.7z
        7z e -y -bd -bb0 -o$HOME/bin /tmp/${exe}.7z
        rm /tmp/${exe}.7z
      done
    ;;
    *) echo "Unknown platform: $(uname -sm)" ; return ;;
  esac
}

get__gosu () {
  echo "Downloading gosu..."
  case "$(uname -sm)" in
    "Linux x86_64")
      local url="$(
        curl -sSL https://api.github.com/repos/tianon/gosu/releases \
          | awk -F \" "/browser_download_url.*amd64/{ print \$4 ; exit }"
        )"
      curl -L# "$url" > "$HOME/bin/gosu"
      chmod a+rx "$HOME/bin/gosu"
    ;;
    *) echo "Unknown platform: $(uname -sm)" ; return ;;
  esac
}

get__hub () {
  echo "Downloading hub..."
  case $(uname) in
    *inux) local arch=linux-amd64 ;;
    *arwin) local arch=darwin-amd64 ;;
    *) echo "Unknown platform: $(uname)" ; return ;;
  esac
  local url="$(
    curl -sL https://api.github.com/repos/github/hub/releases \
      | awk -F \" "/browser_download_url.*${arch}/{ print \$4 ; exit }"
  )"
  local version="$(awk -F / '{print $8}' <<< "$url" | grep -o '[0-9\.]+')"
  curl -L# "$url" \
    | tar --no-same-owner --strip-components=2 -xzC "$HOME/bin" \
        "hub-${arch}-${version}/bin/hub"
}

get__jq () {
  echo "Downloading jq..."
  case $(uname) in
    *inux) local arch=linux64 ;;
    *arwin) local arch=osx-amd64 ;;
    *) echo "Unknown platform: $(uname)" ; return ;;
  esac
  local url="$(
    curl -sL https://api.github.com/repos/stedolan/jq/releases \
      | awk -F \" "/browser_download_url.*${arch}/{ print \$4 ; exit }"
    )"
  curl -L# -o "$HOME/bin/jq" "$url"
  chmod a+x "$HOME/bin/jq"
}

get__lnav () {
  echo "Downloading lnav..."
  case $(uname) in
    *inux) local arch=linux-64bit ;;
    *arwin) local arch=os-x ;;
    *) echo "Unknown platform: $(uname)" ; return ;;
  esac
  local url="$(
    curl -sL https://api.github.com/repos/tstack/lnav/releases \
      | awk -F \" "/browser_download_url.*${arch}.zip/{ print \$4 ; exit }"
    )"
  curl -L# -o /tmp/lnav.zip "$url" || return
  unzip -oj \
    /tmp/lnav.zip \
    *lnav \
    -d "$HOME/bin"
  rm /tmp/lnav.zip
}

get__massren () {
  echo "Downloading massren..."
  go get -v -u github.com/laurent22/massren || return
  cp $HOME/go/bin/massren $HOME/bin/massren
}

get__morpheus () {
  local morpheus_dir="$HOME/bin/morpheus"
  local pkgs=(
    http://morpheus.2f30.org/0.0/packages/x86_64/busybox%231.22.1.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/curl%237.36.0.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/elinks%230.12pre6.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/file%235.17.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/git%231.9.2.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/hbase.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/htop%231.0.3.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/iproute2%233.14.0.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/openssh%236.5p1.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/rsync%233.0.9.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/rtorrent%230.9.2.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/sbase.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/sed%234.2.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/strace%234.8.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/tmux%231.9a.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/ubase.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/util-linux%232.24.2.pkg.tgz
    http://morpheus.2f30.org/0.0/packages/x86_64/vim%237.4.pkg.tgz
  )
  mkdir -vp "$morpheus_dir"
  for pkg in "${pkgs[@]}" ; do
    name="${pkg##*/}"
    name="${name%%%*}"
    echo "Installing morpheus $name"
    curl -L# "$pkg" | tar --no-same-owner -xzC "$morpheus_dir"
  done
}

get__ni () {
  echo "Downloading ni data visualizer..."
  curl -L# https://github.com/spencertipping/ni/archive/develop.tar.gz \
    | tar --no-same-owner -xzC "$HOME/bin/"
  ln -sf "$HOME/bin/ni-develop/ni" "$HOME/bin/ni"
}

get__nms () {
  echo "Downloading nms (no more secrets)..."
  local build_dir="$(mktemp -d)"
  cd "$build_dir"
  curl -L# https://github.com/bartobri/no-more-secrets/archive/master.tar.gz \
    | tar --no-same-owner --strip-components=1 -xz
  make
  cp bin/nms "$HOME/bin/"
  cd -
  rm -fr "$build_dir"
}

get__ohmu () {
  echo "Downloading ohmu disk usage tool..."
  pip install --user --upgrade ohmu
}

get__parallel () {
  echo "Downloading parallel..."
  local url="https://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2"
  local base="$(curl -sL $url | tar -tj | head -n1)"
  curl -SL# "$url" \
    | tar --no-same-owner --strip-components=2 -xjC "$HOME/bin" \
        "${base}src/env_parallel" \
        "${base}src/env_parallel.bash" \
        "${base}src/niceload" \
        "${base}src/parallel" \
        "${base}src/parcat" \
        "${base}src/parset" \
        "${base}src/sem" \
        "${base}src/sql"
}

get__perl () {
  echo "Installing Perl..."
  case "$(uname -sm)" in
    "Linux x86_64")
      curl -L# "http://staticperl.schmorp.de/bigperl.bin" > "$HOME/bin/perl"
      chmod a+rx "$HOME/bin/perl" ;;
    "Darwin x86_64")
      brew install perl ;;
    *)
      echo "Unsupported platform: $(uname -sm)"
      return ;;
  esac
}

get__progress () {
  echo "Downloading progress..."
  local build_dir="$(mktemp -d)"
  cd "$build_dir"
  curl -L# https://github.com/Xfennec/progress/archive/master.tar.gz \
    | tar --no-same-owner --strip-components=1 -xz
  make
  cp progress "$HOME/bin/progress"
  cd -
  rm -fr "$build_dir"
}

get__pup () {
  echo "Downloading pup HTML parser..."
  go get -v github.com/ericchiang/pup || return
  cp $HOME/go/bin/pup $HOME/bin/pup
}

get__pyenv () {
  echo "Downloading pyenv"
  mkdir -vp "$HOME/.pyenv"
  curl -L# https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
  # pyenv install pypy3.5-6.0.0
  # pyenv global pypy3.5-6.0.0
}

get__q () {
  echo "Downloading q, a text querying tool..."
  local version=$(
    curl -sL https://github.com/harelba/q/releases/latest \
      | awk -F " " '/\<title\>/{print $2; exit}')
  curl -L# -o "$HOME/bin/q" https://raw.githubusercontent.com/harelba/q/${version}/bin/q
  chmod a+x "$HOME/bin/q"
}

get__spark () {
  echo "Downloading spark..."
  curl -L# -o "$HOME/bin/spark" https://raw.githubusercontent.com/holman/spark/master/spark
  chmod a+x "$HOME/bin/spark"
}

get__speedtest () {
  echo "Downloading speedtest..."
  curl -L# -o "$HOME/bin/speedtest" https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
  chmod a+x "$HOME/bin/speedtest"
}

get__suplemon () {
  echo "Downloading suplemon, a curses text editor..."
  pip install --user --upgrade suplemon
}

get__textql () {
  echo "Downloading textql..."
  go get -v -u github.com/dinedal/textql/...
  mv $HOME/go/bin/textql $HOME/bin/
}

get__tldr () {
  echo "Dwonloading tldr..."
  curl -L# -o "$HOME/bin/tldr" https://4e4.win/tldr
  chmod a+x "$HOME/bin/tldr"
  tldr -u
}

get_binaries () {
  mkdir -vp "$HOME/bin"
  declare -F | grep -o '(?<=\s)get__\S+' \
    | while read -r func ; do
        hr
        eval $func || return
      done
}
