#!/usr/bin/env bash

av1ator () {
    for infile in "${@}" ; do
        [[ "${infile}" =~ \.av1ator\.mkv$ ]] && continue
        local av1an_opt=(
            -i="${infile}"
            -o="${infile%.*}.av1ator.mkv"
            -s="${infile%.*}.scenes.json"
            -n
            --audio-params=-an
            --chunk-order=long-to-short
            --concat=mkvmerge
            --encoder="${av1an_encoder:-svt-av1}"
            --extra-split=0
            --ffmpeg="${av1an_ffmpeg:--vf deblock=block=8,deband,cas=0.5,hqdn3d}"
            --pix-format=yuv420p10le
            --video-params="${av1an_video_params:---rc 0 --crf 30 --preset 8 --tune 0 --film-grain-denoise 0 --film-grain 0 --input-depth 10 --lookahead 120 --keyint 240}"
        )
        printf 'Transcoding "%s"...\n' "${infile}"
        time nice -n19 av1an "${av1an_opt[@]}" || return ${?}

        local ffprobe_json="$(ffprobe -hide_banner -loglevel fatal -show_error -show_format -show_streams -show_programs -show_chapters -show_private_data -print_format json "${infile}")"
        local ff_post_opts=(
            -i "${infile%.*}.av1ator.mkv"
            -i "${infile}"
            -map 0:v
        )
        local -i audio_channels=$(jq '[.streams[].channels|select(numbers)]|max|select(.!=null)' <<< "${ffprobe_json}")
        for index in $(jq --arg audio_channels ${audio_channels} '[.streams[]|select(.channels==($audio_channels|tonumber)),select([.codec_name]|inside(["ass","dvb_subtitle","dvd_subtitle","subrip","webvtt"]))]|sort_by(.tags.language?)[].index' <<< "${ffprobe_json}") ; do
            ff_post_opts+=( -map 1:${index} )
        done
        if $(jq --arg audio_channels ${audio_channels} '[.streams[]|select(.channels==($audio_channels|tonumber)).codec_name|IN("aac","opus","flac")]|all' <<< "${ffprobe_json}") ; then
          local ffmpeg_opt+=( -c:a copy )
        else
          local ffmpeg_opt+=( -c:a libopus )
          if [ ${audio_channels} -eq 8 ] ; then
              ff_post_opts+=( -mapping_family 1 -channel_layout 7.1 )
          elif [ ${audio_channels} -eq 7 ] ; then
              ff_post_opts+=( -mapping_family 1 -channel_layout 7 )
          elif [ ${audio_channels} -eq 6 ] ; then
              ff_post_opts+=( -mapping_family 1 -channel_layout 5.1 )
          elif [ ${audio_channels} -eq 5 ] ; then
              ff_post_opts+=( -mapping_family 1 -channel_layout 5 )
          fi
        fi
        local ff_post_opts+=(
            -c:v copy
            -c:s mov_text
            -movflags +faststart
            "${infile%.*}.av1ator.mp4"
        )
        time ffmpeg -n "${ff_post_opts[@]}" || return ${?}

        if [ "${av1ator_clean:-}" ] ; then
            echo rm -v "${infile%.*}.av1ator.mkv"
        fi
    done
}
